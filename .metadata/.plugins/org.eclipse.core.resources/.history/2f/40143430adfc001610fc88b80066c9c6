package com.reciperex.storage.service;

import com.reciperex.model.*;
import com.reciperex.service.IdService;

public class SQLBuilder {
	
	public static String insertModel(Object entry){
		String sql;
		if (entry instanceof Attributor)
			sql = insertAttributorModel((Attributor)entry);
		else if (entry instanceof Category)
			sql = insertCategoryModel((Category)entry);
		else if (entry instanceof Cookbook)
			sql = insertCookbookModel((Cookbook)entry);
		else if (entry instanceof Image)
			sql = insertImageModel((Image)entry);
		else if (entry instanceof Ingredient)
			sql = insertIngredientModel((Ingredient)entry);
		else if (entry instanceof Instruction)
			sql = insertInstructionModel((Instruction)entry);
		else if (entry instanceof Meal)
			sql = insertMealModel((Meal)entry);
		else if (entry instanceof MealPlan)
			sql = insertMealPlanModel((MealPlan)entry);
		else if (entry instanceof Pantry)
			sql = insertPantryModel((Pantry)entry);
		else if (entry instanceof Recipe)
			sql = insertRecipeModel((Recipe)entry);
		else if (entry instanceof User)
			sql = insertUserModel((User)entry);
		else
			sql = null;
		
		return sql;
	}
	
	private static String insertAttributorModel(Attributor attributor){
		String sql = "INSERT INTO attributor VALUES (" +
				IdService.generateId("attributor") + "," +
				"'" + attributor.getFirstName() + "'" + "," +
				"'" + attributor.getLastName() + "'" + "," +
				"'" + attributor.getUserId() + "'" + ");";
		return sql;
	}
	
	private static String insertCategoryModel(Category category){
		String sql = "INSERT INTO category VALUES (" +
				IdService.generateId("category") + "," +
				"'" + category.getName() + "'" + ");";
		return sql;
	}
	
	private static String insertCookbookModel(Cookbook cookbook){
		String sql = "INSERT INTO cookbook VALUES (" +
				IdService.generateId("cookbook") + "," +
				"'" + cookbook.getName() + "'" + ");";
		return sql;
	}
	
	private static String insertImageModel(Image image){
		String sql = "INSERT INTO image VALUES (" +
				IdService.generateId("image") + "," +
				"'" + image.getImagePath() + "'" + "," +
				"'" + image.getRecipeId() + "'" + "," +
				"'" + image.getImageText() + "'" + ");";
		return sql;
	}
	
	private static String insertIngredientModel(Ingredient ingredient){
		String sql = "INSERT INTO ingredient VALUES (" +
				IdService.generateId("ingredient") + "," +
				"'" + ingredient.getName() + "'" + "," +
				"'" + ingredient.getQuantity() + "'" + "," +
				"'" + ingredient.getUnitOfMeasure() + "'" + ");";
		return sql;
	}
	
	private static String insertInstructionModel(Instruction instruction){
		String sql = "INSERT INTO instruction VALUES (" +
				IdService.generateId("instruction") + "," +
				"'" + instruction.getInstructionOrderIndex() + "'" + "," +
				"'" + instruction.getInstructionText() + "'" + "," +
				"'" + instruction.getRecipeId() + "'" + ");";
		return sql;
	}
	
	private static String insertMealModel(Meal meal){
		String sql = "INSERT INTO meal VALUES (" +
				IdService.generateId("meal") + "," +
				"'" + meal.getName() + "'" + ");";
		return sql;
	}
	
	private static String insertMealPlanModel(MealPlan mealPlan){
		String sql = "INSERT INTO mealPlan VALUES (" +
				IdService.generateId("mealPlan") + "," +
				"'" + mealPlan.getName() + "'" + ");";
		return sql;
	}
	
	private static String insertPantryModel(Pantry pantry){
		String sql = "INSERT INTO pantry VALUES (" +
				IdService.generateId("pantry") + "," +
				"'" + pantry.getUserId() + "'" + ");";
		return sql;
	}
	
	private static String insertRecipeModel(Recipe recipe){
		String sql = "INSERT INTO recipe VALUES (" +
				IdService.generateId("recipe") + ",";
			sql += nullCheck(recipe.getName()) +  ",";
			sql += nullCheck(recipe.getDescription()) +  ",";
			sql += nullCheck(recipe.getServings()) + ",";
			sql += nullCheck(recipe.getOvenTemp()) + ",";
			if (recipe.getAttributor() != null){
				sql += recipe.getAttributor().getId() + ");";
			}
			else {
				sql += "null);";
			}
		return sql;
	}

	private static String insertUserModel(User user){
		String sql = "INSERT INTO user VALUES (" +
				IdService.generateId("user") + "," +
				"'" + user.getFirstName() + "'" + "," +
				"'" + user.getLastName() + "'" + "," +
				"'" + user.getEmail() + "'" + "," +
				"'" + user.getUsername() + "'" + "," +
				"'" + user.getPassword() + "'" + ");";
		return sql;
	}
	
	private static String nullCheck(String value){
		if (value == null){
			return "null";
		}
		else return value;
	}
	
	private static String nullCheck(Object value){
		if (value == null){
			return "null";
		}
		else return "'" + value.toString() + "'";
	}
	

}
