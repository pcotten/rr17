package com.reciperex.storage.service;

import java.sql.*;
import java.util.ArrayList;
import java.util.List;

import com.reciperex.model.Attributor;
import com.reciperex.model.User;
import com.reciperex.service.IdService;

public class DatabaseManager {

	static final String JDBC_DRIVER = "com.mysql.cj.jdbc.Driver";
	static final String DB_URL = "jdbc:mysql://localhost:3307/recipe_rex";
	
	static final String USER = "root";
	static final String PASS = "Xander@932";
	
	Connection conn = null;
	Statement stmt = null;
	Statement pstmt = null;
	
	public DatabaseManager(){
		init();
	}
	 
	private void init(){
		 try {
			Class.forName(JDBC_DRIVER);
		} catch (ClassNotFoundException e) {
			e.printStackTrace();
		}
	 }
	
	public Integer queryMaxIdNumber(String table){
		Integer maxId = null;
		try{
			conn = DriverManager.getConnection(DB_URL, USER, PASS);
			
			stmt = conn.createStatement();
			
			String sql = "SELECT MAX(userId)FROM " + table + ";";
			ResultSet result = stmt.executeQuery(sql) ;
			while (result.next()){
				maxId = result.getInt(1);
			}
		}
		catch (SQLException se){
			se.printStackTrace();
		}
		finally {
			try {
				cleanup();
			}
			catch (SQLException e){
				e.printStackTrace();
			} 
		}
		return maxId;
	}
	 
	public List<User> queryUsers(String field, String operator, String value){
		List<User> usersList = new ArrayList<User>();
		try {
			conn = DriverManager.getConnection(DB_URL, USER, PASS);
			
			stmt = conn.createStatement();
			
			String sql = "SELECT * FROM user WHERE " + field + operator + value + ";";
			System.out.println("executing : " + sql);
			ResultSet result = stmt.executeQuery(sql);
			
			while (result.next()){
				User user = new User(result.getString("firstName"), result.getString("lastName"),
						result.getString("email"), result.getString("username"), result.getString("password"));
				user.setId(result.getInt("userID"));
				usersList.add(user);
				result.last();
				System.out.println("Returned " + result.getRow() + " user(s).");
			}
		}
		catch (SQLException se){
			se.printStackTrace();
		}
		finally {
			try {
				cleanup();
			}
			catch (SQLException e){
				e.printStackTrace();
			}
		}
		
		return usersList;
	}
	
	public void addToDatabase(Object entry){
		try {
			String sql= null;
			String type = null;
			conn = DriverManager.getConnection(DB_URL, USER, PASS);
			
			stmt = conn.createStatement();

			sql = SQLBuilder.insertModel(entry);
			System.out.println("executing: " + sql);
			int rows = stmt.executeUpdate(sql);
			if (rows > 0){
				type = entry.getClass().toString();
				System.out.println("New " +  "added to database.");
			}
		} catch (SQLException e) {
			e.printStackTrace();
			try {
				conn.rollback();
			} catch (SQLException e1) {
				e1.printStackTrace();
			}
		}
		 finally {
				try {
					cleanup();
				}
				catch (SQLException e){
					e.printStackTrace();
					
				}
			}
	 }
	
//	public void addUser(User user){
//		try {
//			conn = DriverManager.getConnection(DB_URL, USER, PASS);
//			
//			stmt = conn.createStatement();
//			String sql = SQLBuilder.insertModel(user);
//			System.out.println("executing: " + sql);
//			int rows = stmt.executeUpdate(sql);
//			if (rows > 0){
//				System.out.println("User " + user.getUsername() + " added to database.");
//			}
//		} catch (SQLException e) {
//			e.printStackTrace();
//			try {
//				conn.rollback();
//			} catch (SQLException e1) {
//				e1.printStackTrace();
//			}
//		}
//		 finally {
//				try {
//					cleanup();
//				}
//				catch (SQLException e){
//					e.printStackTrace();
//					
//				}
//			}
//	 }
	 
	 public void deleteUser(User user){
		try {
			conn = DriverManager.getConnection(DB_URL, USER, PASS);
				
			stmt = conn.createStatement();
			
			String sql = "DELETE FROM user WHERE username=" + "'" + user.getUsername() + "'";
			System.out.println("executing: " + sql);
			int rows = stmt.executeUpdate(sql);
			if (rows > 0){
				System.out.println("User " + user.getUsername() + " removed from database");
			}
		 }
	 	 catch (SQLException e) {
			e.printStackTrace();
			try {
				conn.rollback();
			} catch (SQLException e1) {
				e1.printStackTrace();
			}
	 	 }
		finally {
			try {
				cleanup();
			}
			catch (SQLException e){
				e.printStackTrace();
			}
		}
	 }
	 
	 public void deleteUser(Integer userId){
			try {
				conn = DriverManager.getConnection(DB_URL, USER, PASS);
					
				stmt = conn.createStatement();
				
				String sql = "DELETE FROM user WHERE userId=" + '"' + userId + '"';
				System.out.println("executing: " + sql);
				int rows = stmt.executeUpdate(sql);
				if (rows > 0){
					System.out.println("User with id " + userId + " removed from database");
				}
			 }
		 	 catch (SQLException e) {
				e.printStackTrace();
				try {
					conn.rollback();
				} catch (SQLException e1) {
					e1.printStackTrace();
				}
		 	 }
			 finally {
				try {
					cleanup();
				}
				catch (SQLException e){
					e.printStackTrace();
				}
			}
		 }
	 
	 public void testConnection(){
		 try {
			 
			 System.out.println("Connecting to database...");
			 conn = DriverManager.getConnection(DB_URL, USER, PASS);
			 
			 System.out.println("Creating a statement...");
			 stmt = conn.createStatement();
			 String sql = "SELECT userId, firstName, lastName FROM user";
			 ResultSet rs = stmt.executeQuery(sql);
			 
			 while (rs.next()){
				 int id = rs.getInt("userId");
				 String firstName = rs.getString("firstName");
				 String lastName = rs.getString("lastName");
				 
				 System.out.println("userId : " + id);
				 System.out.println("firstName : " + firstName);
				 System.out.println("lastName : " + lastName); 
			 }
			 
			 rs.close();
			 cleanup();
			 
		 }
		 catch (SQLException se){
			 se.printStackTrace();
		 }
		 catch (Exception e){
			 e.printStackTrace();
		 }
		 finally {
			 try {
				cleanup();
			} catch (SQLException e) {
				e.printStackTrace();
			}
		 }
	 }

	private void cleanup() throws SQLException {
		if (stmt != null)
			try {
				stmt.close();
			} catch (SQLException se) {
				// do nothing
			}
		 if (conn != null){
			 try {
				 conn.close();
			 }
			 catch (SQLException se) {
				 se.printStackTrace();
			 }
		 }
	}
}
