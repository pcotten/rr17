swagger: "2.0"
info:
  description: |
    Rest services for Recipe Rex web application.
    
  version: "1.0.0"
  title: Recipe Rex API
  termsOfService: http://helloreverb.com/terms/
  contact:
    name: pcottenservices@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
host: localhost
basePath: /rest
schemes:
  - http
paths:
  /recipes/{recipeId}:
    post:
      summary: Add a new recipe to the database
      description: ""
      operationId: addRecipe
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        - in: path
          name: recipeId
          description: Recipe id to delete
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          description: Recipe object that needs to be added to the database
          required: false
          schema:
            $ref: "#/definitions/Recipe"
      responses:
        "405":
          description: Invalid input
    delete:
      summary: Deletes a recipe
      description: ""
      operationId: deleteRecipe
      produces:
        - application/json
        - application/xml
      parameters:
        - in: path
          name: recipeId
          description: Recipe id to delete
          required: true
          type: integer
          format: int64
      responses:
        "400":
          description: Invalid recipe id

    put:
      summary: Update an existing recipe
      description: ""
      operationId: updateRecipe
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        - in: path
          name: recipeId
          description: Recipe id to update
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          description: Recipe object that needs to be updated in the database
          required: false
          schema:
            $ref: "#/definitions/Recipe"
      responses:
        "405":
          description: Validation exception
        "404":
          description: Recipe not found
        "400":
          description: Invalid ID supplied

  /users/login:
    get:
      summary: Logs user into the system
      description: ""
      operationId: loginUser
      produces:
        - application/json
        - application/xml
      parameters:
        - in: query
          name: username
          description: The user name for login
          required: false
          type: string
        - in: query
          name: password
          description: The password for login in clear text
          required: false
          type: string
      responses:
        "200":
          description: successful operation
          schema:
            type: string
        "400":
          description: Invalid username/password supplied

  /users/logout:
    get:
      summary: Logs out current logged in user session
      description: ""
      operationId: logoutUser
      produces:
        - application/json
        - application/xml
      responses:
        default:
          description: successful operation

  /users/{username}:
    get:
      summary: Get user by user name
      description: ""
      operationId: getUserByName
      produces:
        - application/json
        - application/xml
      parameters:
        - in: path
          name: username
          description: The name of the user that needs to be fetched.
          required: true
          type: string
      responses:
        "404":
          description: User not found
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/User"
        "400":
          description: Invalid username supplied
    post:
      summary: Create user
      description: This can only be done by the logged in user.
      operationId: createUser
      produces:
        - application/json
        - application/xml
      parameters:
        - in: path
          name: username
          description: The name of the user to be created
          required: true
          type: string
        - in: body
          name: body
          description: Created user object
          required: false
          schema:
            $ref: "#/definitions/User"
      responses:
        default:
          description: successful operation
    put:
      summary: Updated user
      description: This can only be done by the logged in user.
      operationId: updateUser
      produces:
        - application/json
        - application/xml
      parameters:
        - in: path
          name: username
          description: name that need to be deleted
          required: true
          type: string
        - in: body
          name: body
          description: Updated user object
          required: false
          schema:
            $ref: "#/definitions/User"
      responses:
        "404":
          description: User not found
        "400":
          description: Invalid user supplied
    delete:
      summary: Delete user
      description: This can only be done by the logged in user.
      operationId: deleteUser
      produces:
        - application/json
        - application/xml
      parameters:
        - in: path
          name: username
          description: The name that needs to be deleted
          required: true
          type: string
      responses:
        "404":
          description: User not found
        "400":
          description: Invalid username supplied

  /users/{username}/cookbooks:
    get:
      summary: Finds cookbooks by userId
      description: ""
      operationId: getCookbooksByUserId
      produces:
        - application/json
        - application/xml
      parameters:
        - in: path
          name: username
          description: Username to use to find cookbooks
          required: true
          type: string
      responses:
        "200":
          description: successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/Cookbook"
        "400":
          description: Invalid status value
          
  /users/{username}/cookbooks/{cookbookId}:
    post:
      summary: Creates a new cookbook to the specified user's collection
      description: ""
      operationId: createCookbook
      consumes:
        - application/json
        - applictiaon/xml
      produces:
        - application/json
        - application/xml
      parameters:
        - in: path
          name: username
          description: Username associated with collection of cookbooks
          required: true
          type: string
        - in: path
          name: cookbookId
          description: Id of the cookbook to be created
          required: true
          type: string
      responses:
        "200":
          description: successful operation
  
  /users/{username}/cookbooks/{cookbookId}/recipes:
    get:
      summary: Fetch all recipes in the specified cookbook
      description: ""
      operationId: getCookbookRecipes
      produces:
        - application/json
        - application/xml      
      parameters:
        - in: path
          name: username
          description: Username associated with collection of cookbooks
          required: true
          type: string
        - in: path
          name: cookbookId
          description: Id of the cookbook to be created
          required: true
          type: string
      responses:
        "200":
          description: successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/Recipe"
        "400":
          description: Invalid parameter
  
  /users/{username}/cookbooks/{cookbookId}/recipes/{recipeId}:
    post:
      summary: Adds a recipe to the specified cookbook to the specified user's collection
      description: ""
      operationId: addRecipeToCookbook
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        - in: path
          name: username
          description: Username associated with collection of cookbooks
          required: true
          type: string
        - in: path
          name: cookbookId
          description: Id of the cookbook to be created
          required: true
          type: string
        - in: path
          name: recipeId
          description: Id of the recipe to be added to the cookbook
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: successful operation
    put:
      summary: Updates a recipe within the specified cookbook in the specified user's collection
      description: ""
      operationId: updateRecipeInCookbook
      consumes:
        - application/json
        - application/xml
      parameters:
        - in: path
          name: username
          description: Username associated with collection of cookbooks
          required: true
          type: string
        - in: path
          name: cookbookId
          description: Id of the cookbook to be created
          required: true
          type: string
        - in: path
          name: recipeId
          description: Id of the recipe to be added to the cookbook
          required: true
          type: integer
          format: int64 
      responses:
        "200":
          description: successful operation 
    delete:
      summary: Updates a recipe within the specified cookbook in the specified user's collection
      description: ""
      operationId: deleteRecipeInCookbook
      consumes:
        - application/json
        - application/xml
      parameters:
        - in: path
          name: username
          description: Username associated with collection of cookbooks
          required: true
          type: string
        - in: path
          name: cookbookId
          description: Id of the cookbook to be created
          required: true
          type: string
        - in: path
          name: recipeId
          description: Id of the recipe to be added to the cookbook
          required: true
          type: integer
          format: int64 
      responses:
        "200":
          description: successful operation 
  
  /users/{username}/meals:
    get:
      summary: Finds meals by userId
      description: ""
      operationId: getMealsByUserId
      produces:
        - application/json
        - application/xml
      parameters:
        - in: path
          name: username
          description: Username to use to find meals
          required: true
          type: string
      responses:
        "200":
          description: successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/Meal"
        "400":
          description: Invalid status value
          
  /users/{username}/meals/{mealId}:
    post:
      summary: Creates a new meal to the specified user's collection
      description: ""
      operationId: createMeal
      consumes:
        - application/json
        - applictiaon/xml
      produces:
        - application/json
        - application/xml
      parameters:
        - in: path
          name: username
          description: Username associated with collection of meals
          required: true
          type: string
        - in: path
          name: mealId
          description: Id of the meal to be created
          required: true
          type: string
      responses:
        "200":
          description: successful operation
  
  /users/{username}/meals/{mealId}/recipes:
    get:
      summary: Fetch all recipes in the specified meal
      description: ""
      operationId: getMealRecipes
      produces:
        - application/json
        - application/xml      
      parameters:
        - in: path
          name: username
          description: Username associated with the meal
          required: true
          type: string
        - in: path
          name: mealId
          description: Id of the meal the recipes are in
          required: true
          type: string
      responses:
        "200":
          description: successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/Recipe"
        "400":
          description: Invalid parameter
  
  /users/{username}/meals/{mealId}/recipes/{recipeId}:
    post:
      summary: Adds a recipe to the specified meal to the specified user's collection
      description: ""
      operationId: addRecipeToMeal
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        - in: path
          name: username
          description: Username associated with collection of meals
          required: true
          type: string
        - in: path
          name: mealId
          description: Id of the meal the recipe is in
          required: true
          type: string
        - in: path
          name: recipeId
          description: Id of the recipe to be added to the meal
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: successful operation
    put:
      summary: Updates a recipe within the specified meal in the specified user's collection
      description: ""
      operationId: updateRecipelInMeal
      consumes:
        - application/json
        - application/xml
      parameters:
        - in: path
          name: username
          description: Username associated with collection of meals
          required: true
          type: string
        - in: path
          name: mealId
          description: Id of the meal the recipe is in
          required: true
          type: string
        - in: path
          name: recipeId
          description: Id of the recipe to update
          required: true
          type: integer
          format: int64 
      responses:
        "200":
          description: successful operation 
    delete:
      summary: Deletes a recipe from the specified cookbook in the specified user's collection
      description: ""
      operationId: deleteRecipeFromMeal
      consumes:
        - application/json
        - application/xml
      parameters:
        - in: path
          name: username
          description: Username associated with collection of meals
          required: true
          type: string
        - in: path
          name: mealId
          description: Id of the meal the recipe is in
          required: true
          type: string
        - in: path
          name: recipeId
          description: Id of the recipe to be deleted from the meal
          required: true
          type: integer
          format: int64 
      responses:
        "200":
          description: successful operation

  /users/{username}/mealPlans:
    get:
      summary: Finds mealPlans by userId
      description: ""
      operationId: getMealPlansByUserId
      produces:
        - application/json
        - application/xml
      parameters:
        - in: path
          name: username
          description: Username to use to find mealPlans
          required: true
          type: string
      responses:
        "200":
          description: successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/MealPlan"
        "400":
          description: Invalid status value
          
  /users/{username}/mealPlans/{mealPlanId}:
    post:
      summary: Creates a new meal to the specified user's collection
      description: ""
      operationId: createMealPlan
      consumes:
        - application/json
        - applictiaon/xml
      produces:
        - application/json
        - application/xml
      parameters:
        - in: path
          name: username
          description: Username associated with collection of mealPlans
          required: true
          type: string
        - in: path
          name: mealPlanId
          description: Id of the mealPlan to be created
          required: true
          type: string
      responses:
        "200":
          description: successful operation
  
  /users/{username}/mealPlan/{mealPlanId}/meals:
    get:
      summary: Fetch all meals in the specified mealPlan
      description: ""
      operationId: getMealPlanMeals
      produces:
        - application/json
        - application/xml      
      parameters:
        - in: path
          name: username
          description: Username associated with the mealPlan
          required: true
          type: string
        - in: path
          name: mealPlanId
          description: Id of the mealPlan the meals are in
          required: true
          type: string
      responses:
        "200":
          description: successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/Meal"
        "400":
          description: Invalid parameter
  
  /users/{username}/mealPlans/{mealPlanId}/meals/{mealId}:
    post:
      summary: Adds a meal to the specified mealPlan in the specified user's collection
      description: ""
      operationId: addMealToMealPlan
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        - in: path
          name: username
          description: Username associated with collection of mealPlans
          required: true
          type: string
        - in: path
          name: mealPlanId
          description: Id of the mealPlan the meal is in
          required: true
          type: string
        - in: path
          name: mealId
          description: Id of the meal to be added to the mealPlan
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: successful operation
    put:
      summary: Updates a meal within the specified mealPlan in the specified user's collection
      description: ""
      operationId: updateMealInMealPlan
      consumes:
        - application/json
        - application/xml
      parameters:
        - in: path
          name: username
          description: Username associated with collection of meals
          required: true
          type: string
        - in: path
          name: mealPlanId
          description: Id of the mealPlan the meal is in
          required: true
          type: string
        - in: path
          name: mealId
          description: Id of the meal to update
          required: true
          type: integer
          format: int64 
      responses:
        "200":
          description: successful operation 
    delete:
      summary: Deletes a meal within the specified mealPlan in the specified user's collection
      description: ""
      operationId: deleteMealFromMealPlan
      consumes:
        - application/json
        - application/xml
      parameters:
        - in: path
          name: username
          description: Username associated with collection of mealPlans
          required: true
          type: string
        - in: path
          name: mealPlanId
          description: Id of the mealPlan the meal is in
          required: true
          type: string
        - in: path
          name: mealId
          description: Id of the meal to be deleted from the mealPlan
          required: true
          type: integer
          format: int64 
      responses:
        "200":
          description: successful operation
  
  /users/{username}/pantry/ingredients/{ingredientId}:
    post:
      summary: Adds an ingredient to a user's pantry
      description: ""
      operationId: addIngredientToPantry
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        - in: path
          name: username
          description: Username associated with the pantry
          required: true
          type: string
        - in: path
          name: ingredientId
          description: Id of the ingredient to add
          required: true
          type: string
      responses:
        "200":
          description: successful operation
    put:
      summary: Updates a meal within the specified mealPlan in the specified user's collection
      description: ""
      operationId: updateIngredientInPantry
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        - in: path
          name: username
          description: Username associated with the pantry
          required: true
          type: string
        - in: path
          name: ingredientId
          description: Id of the ingredient to update
          required: true
          type: string
      responses:
        "200":
          description: successful operation
    delete:
      summary: Deletes a meal within the specified mealPlan in the specified user's collection
      description: ""
      operationId: deleteIngredientFromPantry
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        - in: path
          name: username
          description: Username associated with the pantry
          required: true
          type: string
        - in: path
          name: ingredientId
          description: Id of the ingredient to delete
          required: true
          type: string
      responses:
        "200":
          description: successful operation
          
definitions:
  User:
    type: object
    required:
      - id
      - username
    properties:
      id:
        type: integer
        format: int64
      username:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
      password:
        type: string

  Category:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string

  Recipe:
    type: object
    required:
      - name
      - id
    properties:
      id:
        type: integer
        format: int64
      category:
        $ref: "#/definitions/Category"
      name:
        type: string
      attributorId:
        type: integer
        format: int64
      description:
        type: string
      servings:
        type: integer
        format: int64
      ovenTemp:
        type: integer
        format: int64
      instructions:
        type: array
        items: 
          $ref: "#/definitions/Instruction"
      ingredients:
        type: array
        items:
          $ref: "#/definitions/Ingredient"
      status:
        type: string
        description: pet status in the store

  Cookbook:
    type: object
    properties:
      userId:
        type: integer
        format: int64
      recipeId:
        type: array
        items:
          type: integer
          format: int64
  
  Meal:
    type: object
    properties:
      mealId:
        type: integer
        format: int64
      mealName:
        type: string
      recipes:
        type: array
        items:
          $ref: "#/definitions/Recipe"
  MealPlan:
    type: object
    properties:
      mealPlanId:
        type: integer
        format: int64
      name: 
        type: string
      meals:
        type: array
        items:
          $ref: "#/definitions/Meal"
          
  Instruction:
    type: object
    properties:
      id:
        type: integer
        format: int64
      instructionOrderIndex:
        type: integer
        format: int64
      instructionText:
        type: string
      
  Ingredient:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      quantity:
        type: integer
        format: int32

